package com.example.ghcopilot;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import java.util.ArrayList;
import java.util.List;

// Code generated by Github Copilot Chat (including package and imports)
@RestController
public class FibonacciController {

    @GetMapping("/fibonacci")
    public List<Integer> getFibonacciSequence(@RequestParam(defaultValue = "5") int n) {
        if (n <= 0) {
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Number must be greater than zero");
        }

        // Code generated by Github Copilot Autocomplete
        // Throw bad request if n is greater than 20
        if (n > 20) {
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Number must be less than or equal to 20");
        }

        List<Integer> fibonacciSequence = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            fibonacciSequence.add(fibonacci(i));
        }
        return fibonacciSequence;
    }

    private int fibonacci(int n) {
        if (n <= 1) {
            return n;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }
    }
}
